[General]
cmdenv-config-name =
record-eventlog = false
sim-time-limit = 215s
#debug-on-errors = true
print-undisposed = true

cmdenv-express-mode = true
cmdenv-autoflush = true

simtime-resolution = ps
**.bin-recording = false
**.cmdenv-log-level = TRACE
**.module-eventlog-recording = false
**.scalar-recording = false
**.statistic-recording = false
**.vector-record-eventnumbers = false
**.vector-recording = false

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
*.traci.launcher.sumo = "sumo-gui"

# separate random number generator for vehicle penetration rate
num-rngs = 2
*.traci.mapper.rng-0 = 1

[Config veins]
network = artery.veins.GridWorld

# sensorからdisseminatorまでのホップ数なので+2
# router内でのホップ数が6以上になる場合、ripによるホップ数内分のrouterへのrouteが解決するまでに30*ホップ数秒かかるので注意
# そのためシミュレーション開始時間を200秒より遅くしないといけない(rou.xmlと以下のsimStartTime)
**.outputDir = "../../output/passive_grid_pcam/num_15/"
**.ip.timeToLive = 8
*.pcam[*].disseminator.udpApp[0].stageNum = 8
*.pcam[*].sensor.udpApp[0].maxHopNum = 6
**.numProxyCamDevsParEdge = 7
*.pcam[*].sensor.udpApp[0].pcamRange = 50
*.pcam[*].sensor.udpApp[0].fakeCam = true
*.pcam[*].sensor.udpApp[0].fakeCamNum = 15
**.nic.mac1609_4.queueSize = 1000
**.simStartTime = 200
**.pcam[*].sensor.udpApp[0].stopTime = 210s
**.simEndTime = 215
#*.pcam[*].sensor.udpApp[0].simStartTime = 210
#*.node[*].appl.middleware.CaService.simStartTime = 210

# grid*.sumo.cfgを変更する場合はrsuのx,yも変更することx,y = (* + 1)/2 * 100 
*.traci.launcher.sumocfg = "../../extern/veins/examples/veins/grid/grid7.sumo.cfg"
*.rsu[0].mobility.x = 300
*.rsu[0].mobility.y = 300

*.playgroundSizeX = 900m
*.playgroundSizeY = 900m
*.playgroundSizeZ = 20m

#bitrateの選択はveins/src/veins/modules/utility/Consts80211p.hにある
#選択肢は3,4.5,6,9,12,18,24,27Mbps
*.**.nic.mac1609_4.bitrate = 18Mbps
*.connectionManager.maxInterfDist = 50m
*.connectionManager.sendDirect = true
*.connectionManager.coreDebug = false

*.withObstacles = true
*.obstacles.obstacles = xmldoc("veins_config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

*.node[*].nic.mac1609_4.useAcks = true
*.node[*].nic.mac1609_4.useServiceChannel = false
*.node[*].nic.mac1609_4.txPower = 126mW
*.node[*].nic.phy80211p.usePropagationDelay = true
*.node[*].nic.phy80211p.sensitivity = -89dBm
*.node[*].nic.phy80211p.useThermalNoise = true
*.node[*].nic.phy80211p.thermalNoise = -110dBm
*.node[*].nic.phy80211p.decider = xmldoc("veins_config.xml")
*.node[*].nic.phy80211p.analogueModels = xmldoc("veins_config.xml")

*.node[*].applType = "artery.veins.ApplicationLayer"
*.node[*].appl.middleware.updateInterval = 0.1s
*.node[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.node[*].appl.middleware.services = xmldoc("services.xml")
*.node[*].appl.middleware.CaService.fixedRate = true




*.configurator.config = xmldoc("ip.xml")
**.ripConfig = xmldoc("RIPConfig.xml")

*.pcam[*].mobility.z = 10
*.pcam[*].mobility.x = 0
*.pcam[*].mobility.y = 0

*.router[*].mobility.z = 10
*.router[*].mobility.x = 0
*.router[*].mobility.y = 0


*.annotations.draw = false

*.pcam[*].*.numUdpApps = 1
*.pcam[*].sensor.udpApp[0].typename = "UDPCamSender"
*.pcam[*].sensor.udpApp[0].datetime = "2013-06-01 12:35:00"
*.pcam[*].sensor.udpApp[0].destAddresses = "all"
*.pcam[*].sensor.udpApp[0].destPort = 1000
*.pcam[*].sensor.udpApp[0].messageLength = 2000B
*.pcam[*].sensor.udpApp[0].sendInterval = 0.1s
*.pcam[*].sensor.udpApp[0].startTime = 100s
*.pcam[*].sensor.udpApp[0].stopTime = 1000s
*.pcam[*].sensor.networkLayer.ip.forceBroadcast = true

*.pcam[*].disseminator.udpApp[0].typename = "UDPCamListener"
*.pcam[*].disseminator.udpApp[0].localPort = 1000



*.pcam[*].disseminator.nic.mac1609_4.useAcks = true
*.pcam[*].disseminator.nic.mac1609_4.useServiceChannel = false
*.pcam[*].disseminator.nic.mac1609_4.txPower = 126mW
*.pcam[*].disseminator.nic.phy80211p.usePropagationDelay = true
*.pcam[*].disseminator.nic.phy80211p.sensitivity = -89dBm
*.pcam[*].disseminator.nic.phy80211p.useThermalNoise = true
*.pcam[*].disseminator.nic.phy80211p.thermalNoise = -110dBm
*.pcam[*].disseminator.nic.phy80211p.decider = xmldoc("veins_config.xml")
*.pcam[*].disseminator.nic.phy80211p.analogueModels = xmldoc("veins_config.xml")
*.pcam[*].disseminator.nic.phy80211p.allowTxDuringRx = true
*.pcam[*].disseminator.applType = "artery.veins.ApplicationLayer"
*.pcam[*].disseminator.appl.middleware.updateInterval = 100000s
# CAMの自動生成を止めるためにupdateIntervalはシミュレーション中にapiが動かないようにする
*.pcam[*].disseminator.appl.middleware.datetime = "2013-06-01 12:35:00"
*.pcam[*].disseminator.appl.middleware.services = xmldoc("pcamServices.xml")
*.pcam[*].disseminator.appl.middleware.RSUCaService.fixedRate = true


*.numRoadSideUnits = 1

*.rsu[*].appl.middleware.updateInterval = 100000s
*.rsu[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].appl.middleware.services = xmldoc("services.xml")

*.rsu[*].nic.mac1609_4.useAcks = true
*.rsu[*].nic.mac1609_4.useServiceChannel = false
*.rsu[*].nic.mac1609_4.txPower = 126mW
*.rsu[*].nic.phy80211p.sensitivity = -89dBm
*.rsu[*].nic.phy80211p.usePropagationDelay = true
*.rsu[*].nic.phy80211p.useThermalNoise = true
*.rsu[*].nic.phy80211p.thermalNoise = -110dBm
*.rsu[*].nic.phy80211p.decider = xmldoc("veins_config.xml")
*.rsu[*].nic.phy80211p.analogueModels = xmldoc("veins_config.xml")

*.rsu[*].mobility.z = 10





**.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

# Configurator settings
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true

[Config veins_bunkyo]
network = artery.veins.BunkyoWorld

*.playgroundSizeX = 4000m
*.playgroundSizeY = 4000m
*.playgroundSizeZ = 50m

*.connectionManager.maxInterfDist = 1500m
*.connectionManager.sendDirect = true
*.connectionManager.coreDebug = false

*.withObstacles = true
*.obstacles.obstacles = xmldoc("veins_config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

*.node[*].nic.mac1609_4.useAcks = true
*.node[*].nic.mac1609_4.useServiceChannel = false
*.node[*].nic.mac1609_4.txPower = 126mW
*.node[*].nic.phy80211p.usePropagationDelay = true
*.node[*].nic.phy80211p.sensitivity = -89dBm
*.node[*].nic.phy80211p.useThermalNoise = true
*.node[*].nic.phy80211p.thermalNoise = -110dBm
*.node[*].nic.phy80211p.decider = xmldoc("veins_config.xml")
*.node[*].nic.phy80211p.analogueModels = xmldoc("veins_config.xml")

*.node[*].applType = "artery.veins.ApplicationLayer"
*.node[*].appl.middleware.updateInterval = 0.1s
*.node[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.node[*].appl.middleware.services = xmldoc("services.xml")
*.node[*].appl.middleware.CaService.fixedRate = true




*.configurator.config = xmldoc("ip.xml")

*.numProxyCamDevs = 2

*.pcam[*].mobility.z = 10

*.pcam[0].mobility.x = 300
*.pcam[0].mobility.y = 500
*.pcam[1].mobility.x = 2000
*.pcam[1].mobility.y = 1000

*.annotations.draw = false

*.pcam[*].router.hasRIP = true
*.pcam[*].*.numUdpApps = 1
*.pcam[*].sensor.udpApp[0].typename = "UDPCamSender"
*.pcam[*].sensor.udpApp[0].datetime = "2013-06-01 12:35:00"
*.pcam[*].sensor.udpApp[0].destAddresses = "255.255.255.255"
*.pcam[*].sensor.udpApp[0].destPort = 1000
*.pcam[*].sensor.udpApp[0].messageLength = 2000B
*.pcam[*].sensor.udpApp[0].sendInterval = 0.1s
*.pcam[*].sensor.udpApp[0].startTime = 1s
*.pcam[*].sensor.udpApp[0].stopTime = 100s
*.pcam[*].sensor.networkLayer.ip.forceBroadcast = true

*.pcam[*].disseminator.udpApp[0].typename = "UDPCamListener"
#*.pcam[*].disseminator.udpApp[0].typename = "UDPEchoApp"
*.pcam[*].disseminator.udpApp[0].localPort = 1000



*.pcam[*].disseminator.nic.mac1609_4.useAcks = true
*.pcam[*].disseminator.nic.mac1609_4.useServiceChannel = false
*.pcam[*].disseminator.nic.mac1609_4.txPower = 126mW
*.pcam[*].disseminator.nic.phy80211p.usePropagationDelay = true
*.pcam[*].disseminator.nic.phy80211p.sensitivity = -89dBm
*.pcam[*].disseminator.nic.phy80211p.useThermalNoise = true
*.pcam[*].disseminator.nic.phy80211p.thermalNoise = -110dBm
*.pcam[*].disseminator.nic.phy80211p.decider = xmldoc("veins_config.xml")
*.pcam[*].disseminator.nic.phy80211p.analogueModels = xmldoc("veins_config.xml")

*.pcam[*].disseminator.applType = "artery.veins.ApplicationLayer"
*.pcam[*].disseminator.appl.middleware.updateInterval = 100000s
# CAMの自動生成を止めるためにupdateIntervalはシミュレーション中にapiが動かないようにする
*.pcam[*].disseminator.appl.middleware.datetime = "2013-06-01 12:35:00"
*.pcam[*].disseminator.appl.middleware.services = xmldoc("pcamServices.xml")
*.pcam[*].disseminator.appl.middleware.RSUCaService.fixedRate = true


*.numRoadSideUnits = 2

*.rsu[*].appl.middleware.updateInterval = 100000s
*.rsu[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].appl.middleware.services = xmldoc("services.xml")

*.rsu[*].nic.mac1609_4.useAcks = true
*.rsu[*].nic.mac1609_4.useServiceChannel = false
*.rsu[*].nic.mac1609_4.txPower = 126mW
*.rsu[*].nic.phy80211p.sensitivity = -89dBm
*.rsu[*].nic.phy80211p.usePropagationDelay = true
*.rsu[*].nic.phy80211p.useThermalNoise = true
*.rsu[*].nic.phy80211p.thermalNoise = -110dBm
*.rsu[*].nic.phy80211p.decider = xmldoc("veins_config.xml")
*.rsu[*].nic.phy80211p.analogueModels = xmldoc("veins_config.xml")

*.rsu[*].mobility.z = 10

*.rsu[0].mobility.x = 300
*.rsu[0].mobility.y = 500
*.rsu[1].mobility.x = 2000
*.rsu[1].mobility.y = 1000




**.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

# Configurator settings
*.configurator.dumpAddresses = true
*.configurator.dumpTopology = true
*.configurator.dumpLinks = true
*.configurator.dumpRoutes = true

[Config inet]
network = artery.inet.World

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW

*.node[*].middleware.updateInterval = 0.1s
*.node[*].middleware.datetime = "2013-06-01 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")


[Config inet_security]
extends = inet

*.node[*].vanetza.security.typename = "SecurityEntity"


[Config inet_multiple_vehicle_types]
extends = inet
# see above for configuration of mapper's random number generator (rng)
seed-1-mt = ${seed=0, 23, 42, 1337, 0815, 4711}
*.traci.mapper.typename = "traci.MultiTypeModuleMapper"
*.traci.mapper.vehicleTypes = xmldoc("vehicles.xml")


[Config envmod]
extends = inet
network = artery.envmod.World
**.identityRegistryModule = "idRegistry"
*.traci.mapper.vehicleType = "artery.envmod.Car"
*.environmentModel.preselectionMethod = ${preseletion=1,2,3}
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].middleware.services = xmldoc("services-envmod.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")


[Config inet_rsu]
extends = inet
*.numRoadSideUnits = 2
*.rsu[*].middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].middleware.services = xml("<services />")
*.rsu[*].mobility.initialZ = 10m
*.rsu[0].mobility.initialX = 300m
*.rsu[0].mobility.initialY = 500m
*.rsu[1].mobility.initialX = 2000m
*.rsu[1].mobility.initialY = 1000m


[Config veins_rsu]
extends = veins
*.numRoadSideUnits = 2

*.rsu[*].appl.middleware.updateInterval = 0.1s
*.rsu[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].appl.middleware.services = xml("<services />")

*.rsu[*].nic.mac1609_4.useAcks = true
*.rsu[*].nic.mac1609_4.useServiceChannel = false
*.rsu[*].nic.mac1609_4.txPower = 126mW
*.rsu[*].nic.phy80211p.sensitivity = -89dBm
*.rsu[*].nic.phy80211p.usePropagationDelay = true
*.rsu[*].nic.phy80211p.useThermalNoise = true
*.rsu[*].nic.phy80211p.thermalNoise = -110dBm
*.rsu[*].nic.phy80211p.decider = xmldoc("veins_config.xml")
*.rsu[*].nic.phy80211p.analogueModels = xmldoc("veins_config.xml")

*.rsu[*].mobility.z = 10

*.rsu[0].mobility.x = 300
*.rsu[0].mobility.y = 500
*.rsu[1].mobility.x = 2000
*.rsu[1].mobility.y = 1000


[Config inet_antenna_offset]
extends = inet

*.node[*].withAntennaMobility = true
*.node[*].antennaMobility.offsetX = -2.5 m


[Config delayed_vehicle_insertion]
description = "insert a bulk of vehicles with individual delays"
extends = inet
*.traci.core.startTime = 120 s
*.traci.nodes.typename = "InsertionDelayNodeManager"
